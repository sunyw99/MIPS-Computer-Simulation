$date
   Thu Nov  7 11:15:28 2019
$end
$version
  2018.3
$end
$timescale
  1ps
$end
$scope module TestBenchSingle $end
$var reg 1 ! clk $end
$var reg 1 " reset $end
$var reg 7 # clk_count [6:0] $end
$scope module UUT $end
$var wire 1 $ clock $end
$var wire 1 % reset $end
$var reg 32 & PC [31:0] $end
$var wire 32 ' PC_next [31:0] $end
$var wire 32 ( PC_normal [31:0] $end
$var wire 32 ) PC_temp [31:0] $end
$var wire 32 * PC_jump [31:0] $end
$var wire 32 + PC_branch [31:0] $end
$var wire 32 , instruction [31:0] $end
$var wire 5 - write_register [4:0] $end
$var wire 1 . RegDst $end
$var wire 5 / ins25_21 [4:0] $end
$var wire 5 0 ins20_16 [4:0] $end
$var wire 5 1 ins15_11 [4:0] $end
$var wire 32 2 write_data [31:0] $end
$var wire 32 3 read_data1 [31:0] $end
$var wire 32 4 read_data2 [31:0] $end
$var wire 1 5 RegWrite $end
$var wire 6 6 opcode [5:0] $end
$var wire 6 7 funct [5:0] $end
$var wire 16 8 imm [15:0] $end
$var wire 4 9 ALUControl [3:0] $end
$var wire 32 : ALU_in2 [31:0] $end
$var wire 32 ; ALU_out [31:0] $end
$var wire 1 < Zero $end
$var wire 1 = ALUSrc $end
$var wire 1 > MemWrite $end
$var wire 1 ? MemRead $end
$var wire 32 @ DataMem_ReadData [31:0] $end
$var wire 1 A MemtoReg $end
$var wire 32 B DM_out [31:0] $end
$var wire 32 C RA [31:0] $end
$var wire 1 D Branch $end
$var wire 1 E Branch_ne $end
$var wire 1 F Jump $end
$var wire 1 G regdata $end
$var wire 1 H regnum $end
$scope module M1 $end
$var wire 32 I pc [31:0] $end
$var wire 1 % reset $end
$var wire 32 , instr [31:0] $end
$upscope $end
$scope module M2 $end
$var wire 5 / read1 [4:0] $end
$var wire 5 0 read2 [4:0] $end
$var wire 5 - write [4:0] $end
$var wire 32 2 w_data [31:0] $end
$var wire 1 5 regWrite $end
$var wire 1 $ clock $end
$var wire 1 % reset $end
$var wire 5 J regnum [4:0] $end
$var wire 32 3 data1 [31:0] $end
$var wire 32 4 data2 [31:0] $end
$var wire 32 K regdata [31:0] $end
$upscope $end
$scope module M3 $end
$var wire 6 6 opcode [5:0] $end
$var wire 6 7 funct [5:0] $end
$var reg 4 L ALUControl [3:0] $end
$upscope $end
$scope module M4 $end
$var wire 32 3 A [31:0] $end
$var wire 32 : B [31:0] $end
$var wire 4 9 ALUControl [3:0] $end
$var reg 32 M Result [31:0] $end
$var wire 1 < Zero $end
$upscope $end
$scope module M5 $end
$var wire 1 > MemWrite $end
$var wire 1 ? MemRead $end
$var wire 32 4 WriteData [31:0] $end
$var wire 32 ; ALU_address [31:0] $end
$var wire 1 $ clock $end
$var wire 1 % reset $end
$var wire 32 @ ReadData [31:0] $end
$scope begin Block11_6 $end
$var integer 32 N i $end
$upscope $end
$upscope $end
$scope module M7 $end
$var wire 6 6 opcode [5:0] $end
$var wire 1 . RegDst $end
$var wire 1 F Jump $end
$var wire 1 D Branch $end
$var wire 1 E Branch_ne $end
$var wire 1 ? MemRead $end
$var wire 1 > MemWrite $end
$var wire 1 A MemtoReg $end
$var wire 1 = ALUSrc $end
$var wire 1 5 RegWrite $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0!
0"
b1 #
0$
1%
b11111111111111111111111111111100 &
b0 '
b0 (
b0 )
b0 *
b0 +
b0 ,
b0 -
1.
b0 /
b0 0
b0 1
b0 2
b0 3
b0 4
15
b0 6
b0 7
b0 8
b10 9
b0 :
b0 ;
1<
0=
0>
0?
b0 @
0A
b0 B
b0 C
0D
0E
0F
0G
zH
b11111111111111111111111111111100 I
bz J
b0 K
b10 L
b0 M
b100000 N
$end
#2000
0%
b0 ,
b0 3
b0 4
b0 @
xG
bx K
#5000
1!
1$
b0 &
b100 '
b100 (
b100 )
b1000000000000010000000 *
b10000100 +
b100000000010000000000000100000 ,
b1000 -
0.
b1000 0
b100000 2
b0 4
b1000 6
b100000 7
b100000 8
b100000 :
b100000 ;
0<
1=
0?
b0 @
0A
b100000 B
b100000 C
0D
0E
0F
b0 I
b10 L
b100000 M
#10000
0!
b10 #
0$
#15000
1!
1$
b100 &
b1000 '
b1000 (
b1000 )
b1001000000000011011100 *
b11100100 +
b100000000010010000000000110111 ,
b1001 -
b1001 0
b110111 2
b0 3
b0 4
b110111 7
b110111 8
b110111 :
b110111 ;
0<
b0 @
b110111 B
b110111 C
xG
b100 I
b10 L
b110111 M
#20000
0!
b11 #
0$
#25000
1!
1$
b1000 &
b1100 '
b1100 (
b1100 )
b100001001100000000010010000 *
b11111111111111100000000010011100 +
b1000010011000000000100100 ,
b10000 -
1.
b1000 /
b10000 1
b100000 2
b100000 3
b110111 4
b0 6
b100100 7
b1000000000100100 8
b0 9
b110111 :
b100000 ;
0<
0=
0?
b0 @
0A
b100000 B
b11111111111111111000000000100100 C
0D
0E
0F
xG
b1000 I
b0 L
b100000 M
#30000
0!
b100 #
0$
#35000
1!
1$
b1100 &
b10000 '
b10000 (
b10000 )
b100001001100000000010010100 *
b11111111111111100000000010100100 +
b1000010011000000000100101 ,
b110111 2
b100000 3
b110111 4
b100101 7
b1000000000100101 8
b1 9
b110111 :
b110111 ;
0<
b0 @
b110111 B
b11111111111111111000000000100101 C
xG
b1100 I
b1 L
b110111 M
#40000
0!
b101 #
0$
#45000
1!
1$
b10000 &
b10100 '
b10100 (
b10100 )
b10000000000000000010000 *
b100100 +
b10101100000100000000000000000100 ,
b10000 -
0.
b0 /
b10000 0
b0 1
b100 2
b0 3
b110111 4
05
b101011 6
b100 7
b100 8
b10 9
b100 :
b100 ;
0<
1=
1>
0?
b0 @
0A
b100 B
b100 C
0D
0E
0F
xG
b10000 I
b10 L
b100 M
#50000
0!
b110 #
0$
b0 @
#55000
1!
1$
b10100 &
b11000 '
b11000 (
b11000 )
b1000000000000000100000 *
b111000 +
b10101100000010000000000000001000 ,
b1000 -
b1000 0
b1000 2
b100000 4
b1000 7
b1000 8
b1000 :
b1000 ;
0<
b0 @
b1000 B
b1000 C
b10100 I
b10 L
b1000 M
#60000
0!
b111 #
0$
b0 @
#65000
1!
1$
b11000 &
b11100 '
b11100 (
b11100 )
b100001001100010000010000000 *
b11111111111111100010000010011100 +
b1000010011000100000100000 ,
b10001 -
1.
b1000 /
b1001 0
b10001 1
b1010111 2
b100000 3
b110111 4
15
b0 6
b100000 7
b1000100000100000 8
b110111 :
b1010111 ;
0<
0=
0>
0?
b0 @
0A
b1010111 B
b11111111111111111000100000100000 C
0D
0E
0F
b11000 I
b10 L
b1010111 M
#70000
0!
b1000 #
0$
#75000
1!
1$
b11100 &
b100000 '
b100000 (
b100000 )
b100001001100100000010001000 *
b11111111111111100100000010101000 +
b1000010011001000000100010 ,
b10010 -
b10010 1
b11111111111111111111111111101001 2
b100000 3
b110111 4
b100010 7
b1001000000100010 8
b110 9
b110111 :
b11111111111111111111111111101001 ;
0<
b0 @
b11111111111111111111111111101001 B
b11111111111111111001000000100010 C
xG
b11100 I
b110 L
b11111111111111111111111111101001 M
#80000
0!
b1001 #
0$
#85000
1!
1$
b100000 &
b100100 '
b100100 (
b100100 )
b1000110010000000000000100100 *
b1001000 +
b10010001100100000000000001001 ,
b10010 -
0.
b10001 /
b10010 0
b0 1
b1101110 2
b1010111 3
b11111111111111111111111111101001 4
05
b100 6
b1001 7
b1001 8
b11111111111111111111111111101001 :
b1101110 ;
0<
0=
0?
b0 @
0A
b1101110 B
b1001 C
1D
0E
0F
xG
b100000 I
b110 L
b1101110 M
#90000
0!
b1010 #
0$
#95000
1!
1$
b100100 &
b101000 '
b101000 (
b101000 )
b10001000000000000010000 *
b111000 +
b10001100000100010000000000000100 ,
b10001 -
0.
b0 /
b10001 0
b110111 2
b0 3
b1010111 4
15
b100011 6
b100 7
b100 8
b10 9
b100 :
b100 ;
0<
1=
1?
b110111 @
1A
b110111 B
b100 C
0D
0E
0F
b100100 I
b10 L
b100 M
#100000
0!
b1011 #
0$
#105000
1!
1$
b101000 &
b101100 '
b101100 (
b101100 )
b1000110010000000000100100000 *
b101001100 +
b110010001100100000000001001000 ,
b10010 -
0.
b10001 /
b10010 0
b0 2
b110111 3
b11111111111111111111111111101001 4
b1100 6
b1000 7
b1001000 8
b0 9
b1001000 :
b0 ;
1<
1=
0?
b0 @
0A
b0 B
b1001000 C
0D
0E
0F
xG
b101000 I
b0 L
b0 M
#110000
0!
b1100 #
0$
#115000
1!
1$
b101100 &
b110000 '
b110000 (
b110000 )
b1000110010000000000000100100 *
b1010100 +
b10010001100100000000000001001 ,
0.
b110111 2
b110111 3
b0 4
05
b100 6
b1001 7
b1001 8
b110 9
b0 :
b110111 ;
0<
0=
0?
b0 @
0A
b110111 B
b1001 C
1D
0E
0F
xG
b101100 I
b110 L
b110111 M
#120000
0!
b1101 #
0$
#125000
1!
1$
b110000 &
b110100 '
b110100 (
b110100 )
b10011000000000000100000 *
b1010100 +
b10001100000100110000000000001000 ,
b10011 -
0.
b0 /
b10011 0
b100000 2
b0 3
b0 4
15
b100011 6
b1000 7
b1000 8
b10 9
b1000 :
b1000 ;
0<
1=
1?
b100000 @
1A
b100000 B
b1000 C
0D
0E
0F
b110000 I
b10 L
b1000 M
#130000
0!
b1110 #
0$
#135000
1!
1$
b110100 &
b111000 '
b111000 (
b111000 )
b1000010011000000000000101000 *
b1100000 +
b10010000100110000000000001010 ,
0.
b10000 /
b10111 2
b110111 3
b100000 4
05
b100 6
b1010 7
b1010 8
b110 9
b100000 :
b10111 ;
0<
0=
0?
b0 @
0A
b10111 B
b1010 C
1D
0E
0F
xG
b110100 I
b110 L
b10111 M
#140000
0!
b1111 #
0$
#145000
1!
1$
b111000 &
b111100 '
b111100 (
b111100 )
b1001010001101000000010101000 *
b11111111111111101000000011100100 +
b10010100011010000000101010 ,
b10100 -
1.
b10010 /
b10001 0
b10100 1
b1 2
b0 3
b110111 4
15
b0 6
b101010 7
b1010000000101010 8
b111 9
b110111 :
b1 ;
0<
0=
0?
b0 @
0A
b1 B
b11111111111111111010000000101010 C
0D
0E
0F
b111000 I
b111 L
b1 M
#150000
0!
b10000 #
0$
#155000
1!
1$
b111100 &
b1000000 '
b1000000 (
b1000000 )
b1010000000000000000000111100 *
b1111100 +
b10010100000000000000000001111 ,
b0 -
0.
b10100 /
b0 0
b0 1
b1 2
b1 3
b0 4
05
b100 6
b1111 7
b1111 8
b110 9
b0 :
b1 ;
0<
0=
0?
b0 @
0A
b1 B
b1111 C
1D
0E
0F
xG
b111100 I
b110 L
b1 M
#160000
0!
b10001 #
0$
#165000
1!
1$
b1000000 &
b1000100 '
b1000100 (
b1000100 )
b1000100000100100000010000000 *
b11111111111111100100000011000100 +
b10001000001001000000100000 ,
b10010 -
1.
b10001 /
b10010 1
b110111 2
b110111 3
15
b0 6
b100000 7
b1001000000100000 8
b10 9
b0 :
b110111 ;
0<
0=
0?
b0 @
0A
b110111 B
b11111111111111111001000000100000 C
0D
0E
0F
b1000000 I
b10 L
b110111 M
#170000
0!
b10010 #
0$
#175000
1!
1$
b1000100 &
b111000 '
b1001000 (
b1001000 )
b111000 *
b10000000 +
b1000000000000000000000001110 ,
b0 -
0.
b0 /
b0 1
b0 2
b0 3
b0 4
05
b10 6
b1110 7
b1110 8
b0 :
b0 ;
1<
0=
0?
b0 @
0A
b0 B
b1110 C
0D
0E
1F
xG
b1000100 I
b10 L
b0 M
#180000
0!
b10011 #
0$
#185000
1!
1$
b111000 &
b111100 '
b111100 (
b111100 )
b1001010001101000000010101000 *
b11111111111111101000000011100100 +
b10010100011010000000101010 ,
b10100 -
1.
b10010 /
b10001 0
b10100 1
b0 2
b110111 3
b110111 4
15
b0 6
b101010 7
b1010000000101010 8
b111 9
b110111 :
b0 ;
1<
0=
0?
b0 @
0A
b0 B
b11111111111111111010000000101010 C
0D
0E
0F
b111000 I
b111 L
b0 M
#190000
0!
b10100 #
0$
#195000
1!
1$
b111100 &
b1111100 '
b1000000 (
b1111100 )
b1010000000000000000000111100 *
b1111100 +
b10010100000000000000000001111 ,
b0 -
0.
b10100 /
b0 0
b0 1
b0 3
b0 4
05
b100 6
b1111 7
b1111 8
b110 9
b0 :
0=
0?
0A
b1111 C
1D
0E
0F
xG
b111100 I
b110 L
b0 M
#200000
0!
b10101 #
0$
#205000
1!
1$
b1111100 &
bx '
b10000000 (
bx )
b0xxxxxxxxxxxxxxxxxxxxxxxxxx00 *
bx +
bx ,
bx -
x.
bx /
bx 0
bx 1
bx 2
bx 3
bx 4
x5
bx 6
bx 7
bx 8
b10 9
bx :
bx ;
x<
x=
x>
x?
bx @
xA
bx B
bx C
xD
xE
xF
b1111100 I
b10 L
bx M
#210000
0!
b10110 #
0$
#215000
1!
1$
#220000
0!
b10111 #
0$
#225000
1!
1$
#230000
0!
b11000 #
0$
#235000
1!
1$
#240000
0!
b11001 #
0$
#245000
1!
1$
#250000
0!
b11010 #
0$
#255000
1!
1$
#260000
0!
b11011 #
0$
#265000
1!
1$
#270000
0!
b11100 #
0$
#275000
1!
1$
#280000
0!
b11101 #
0$
#285000
1!
1$
#290000
0!
b11110 #
0$
#295000
1!
1$
#300000
0!
b11111 #
0$
#305000
1!
1$
#310000
0!
b100000 #
0$
#315000
1!
1$
#320000
0!
b100001 #
0$
#325000
1!
1$
#330000
0!
b100010 #
0$
#335000
1!
1$
#340000
0!
b100011 #
0$
#345000
1!
1$
#350000
0!
b100100 #
0$
#355000
1!
1$
#360000
0!
b100101 #
0$
#365000
1!
1$
#370000
0!
b100110 #
0$
#375000
1!
1$
#380000
0!
b100111 #
0$
#385000
1!
1$
#390000
0!
b101000 #
0$
#395000
1!
1$
#400000
0!
b101001 #
0$
#405000
1!
1$
#410000
0!
b101010 #
0$
#415000
1!
1$
#420000
0!
b101011 #
0$
#425000
1!
1$
#430000
0!
b101100 #
0$
#435000
1!
1$
#440000
0!
b101101 #
0$
#445000
1!
1$
#450000
0!
b101110 #
0$
#455000
1!
1$
#460000
0!
b101111 #
0$
#465000
1!
1$
#470000
0!
b110000 #
0$
#475000
1!
1$
#480000
0!
b110001 #
0$
#485000
1!
1$
#490000
0!
b110010 #
0$
#495000
1!
1$
#500000
0!
b110011 #
0$
